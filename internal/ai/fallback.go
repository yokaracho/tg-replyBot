package ai

import (
	"context"
	"strings"

	"tg-replyBot/pkg/logger"
)

type Fallback struct {
	logger logger.Logger
}

func NewFallback(logger logger.Logger) Provider {
	return &Fallback{
		logger: logger,
	}
}

func (f *Fallback) GenerateReply(ctx context.Context, request Request) (string, error) {
	messageLower := strings.ToLower(request.Message)
	styleName := request.Style.Name

	if strings.Contains(messageLower, "—Å–ø–∞—Å–∏–±–æ") || strings.Contains(messageLower, "–±–ª–∞–≥–æ–¥–∞—Ä—é") {
		return f.getThankYouReply(styleName), nil
	} else if strings.Contains(messageLower, "–∏–∑–≤–∏–Ω–∏") || strings.Contains(messageLower, "–ø—Ä–æ—Å—Ç–∏") {
		return f.getApologyReply(styleName), nil
	} else if strings.Contains(request.Message, "?") {
		return f.getQuestionReply(styleName), nil
	}

	return f.getGenericReply(styleName), nil
}

func (f *Fallback) getThankYouReply(styleName string) string {
	replies := map[string]string{
		"friendly":   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üòä",
		"formal":     "–ù–µ –∑–∞ —á—Ç–æ. –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.",
		"brief":      "üëç",
		"detailed":   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –Ø –æ—á–µ–Ω—å —Ä–∞–¥, —á—Ç–æ —Å–º–æ–≥ –ø–æ–º–æ—á—å. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è.",
		"humorous":   "–î–∞ –Ω–µ –∑–∞ —á—Ç–æ! –Ø –∂–µ –Ω–µ –∑–≤–µ—Ä—å –∫–∞–∫–æ–π-—Ç–æ üòÑ",
		"empathetic": "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–º–æ–≥–∞—Ç—å —Ö–æ—Ä–æ—à–∏–º –ª—é–¥—è–º ‚ù§Ô∏è",
		"motivating": "–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™",
	}

	if reply, exists := replies[styleName]; exists {
		return reply
	}
	return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞!"
}

func (f *Fallback) getApologyReply(styleName string) string {
	replies := map[string]string{
		"friendly":   "–î–∞ –ª–∞–¥–Ω–æ, –≤—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π üòä",
		"formal":     "–ü—Ä–∏–Ω—è—Ç–æ. –í–æ–ø—Ä–æ—Å –∑–∞–∫—Ä—ã—Ç.",
		"brief":      "–û–∫–µ–π",
		"detailed":   "–í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ, —Ç–∞–∫–æ–µ —Å–ª—É—á–∞–µ—Ç—Å—è —Å –∫–∞–∂–¥—ã–º. –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ –º—ã —ç—Ç–æ –æ–±—Å—É–¥–∏–ª–∏.",
		"humorous":   "–î–∞ –∑–∞–±–µ–π, —è –Ω–µ –æ–±–∏–¥—á–∏–≤—ã–π! üòÑ",
		"empathetic": "–ù–µ —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å, –≤—Å–µ –º—ã –ª—é–¥–∏. –¢—ã —Ö–æ—Ä–æ—à–∏–π —á–µ–ª–æ–≤–µ–∫ ‚ù§Ô∏è",
		"motivating": "–≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–≤–æ—é –∑—Ä–µ–ª–æ—Å—Ç—å! –ü—Ä–∏–∑–Ω–∞–≤–∞—Ç—å –æ—à–∏–±–∫–∏ - —ç—Ç–æ —Å–∏–ª–∞! üí™",
	}

	if reply, exists := replies[styleName]; exists {
		return reply
	}
	return "–í—Å–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ!"
}

func (f *Fallback) getQuestionReply(styleName string) string {
	replies := map[string]string{
		"friendly":   "–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –≤–º–µ—Å—Ç–µ üòä",
		"formal":     "–†–∞—Å—Å–º–æ—Ç—Ä—é –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.",
		"brief":      "–†–∞–∑–±–µ—Ä—É—Å—å",
		"detailed":   "–≠—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è. –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã.",
		"humorous":   "–û, —ç—Ç–æ —Ç–æ—Ç —Å–∞–º—ã–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –º–∏–ª–ª–∏–æ–Ω! üòÑ –°–µ–π—á–∞—Å –ø–æ–¥—É–º–∞–µ–º...",
		"empathetic": "–ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –≤–∞–∂–µ–Ω –¥–ª—è —Ç–µ–±—è. –î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ –Ω–∞–π–¥–µ–º –æ—Ç–≤–µ—Ç ‚ù§Ô∏è",
		"motivating": "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –õ—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å - –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É! üí™",
	}

	if reply, exists := replies[styleName]; exists {
		return reply
	}
	return "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å!"
}

func (f *Fallback) getGenericReply(styleName string) string {
	replies := map[string]string{
		"friendly":   "–ü–æ–Ω—è–ª —Ç–µ–±—è! –ó–≤—É—á–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üòä",
		"formal":     "–ü—Ä–∏–Ω—è—Ç–æ –∫ —Å–≤–µ–¥–µ–Ω–∏—é. –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.",
		"brief":      "–Ø—Å–Ω–æ",
		"detailed":   "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å.",
		"humorous":   "–ê–≥–∞, –ø–æ–ø–∞–ª –≤ —Ç–æ—á–∫—É! üòÑ",
		"empathetic": "–°–ª—ã—à—É —Ç–µ–±—è. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–æ–≤–µ—Ä—è–µ—à—å –º–Ω–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏ ‚ù§Ô∏è",
		"motivating": "–ö—Ä—É—Ç–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏! üí™",
	}

	if reply, exists := replies[styleName]; exists {
		return reply
	}
	return "–ü–æ–Ω—è—Ç–Ω–æ!"
}
